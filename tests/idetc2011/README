
Procedure:

   1) Adjust test.lua to generate a task
      1.1) m should be for target structure
      1.2) set fingers wanted
      1.3) set axes
   2) Run test.lua to generate test_run.lua and test_run_base.lua
   3) Adjust dir_path.lua for output directory
   4) Run experiment.lua
   5) SIGINT when enough data has been obtained
   6) Run cmp.lua to detect repeated solutions

Standalone:

   cmp.lua        -> used to compare a set of solutions, needs asserts disabled
   experiment.lua -> generates infinite data
   single.lua     -> generates a single solution using genetic algorithms
   test.lua       -> generates the test_run.lua and test_run_bas.lua for testing
   vis.lua        -> visualizer for comparing solutions

Resources:

   generator.lua  -> used to generate lua files with solutions
   hand.lua       -> generates anthropomorphic hand data
   hand_data.lua  -> joint information used to generate data
   kin_util.lua   -> utilities for kinematics
   prng.lua       -> pseudo random number generator
   util.lua       -> misc utilities like curry functions in lua


